{
  "openapi": "3.0.1",
  "info": {
    "title": "Task Manager API",
    "description": "In need of a proper description",
    "contact": {
      "email": "alison.vandromme@ynov.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://choosealicense.com/licenses/mit/"
    },
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about the project",
    "url": "https://github.com/AlisonV2/av2-task-manager"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "User management service"
    },
    {
      "name": "sessions",
      "description": "Session management service"
    },
    {
      "name": "tokens",
      "description": "Token management service"
    },
    {
      "name": "tasks",
      "description": "Tasks management service"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": ["users"],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "User credentials and name",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "User"
                  },
                  "email": {
                    "type": "string",
                    "example": "user-test@test.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "usertest123"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User created",
            "links": {
              "currentUser": {
                "$ref": "#/components/links/currentUser"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/InvalidData"
          }
        }
      },
      "get": {
        "tags": ["users"],
        "summary": "Get all users - Admin only",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/current": {
      "get": {
        "tags": ["users"],
        "summary": "Get current user",
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "links": {
              "currentUser": {
                "$ref": "#/components/links/currentUser"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["users"],
        "summary": "Update user",
        "description": "Update username.",
        "operationId": "updateUser",
        "requestBody": {
          "description": "Updated user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {},
            "links": {
              "currentUser": {
                "$ref": "#/components/links/currentUser"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/InvalidData"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["users"],
        "summary": "Delete user",
        "description": "Delete user and all user's tasks.",
        "operationId": "deleteUser",
        "responses": {
          "204": {
            "description": "User deleted successfully",
            "content": {}
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/sessions": {
      "post": {
        "tags": ["sessions"],
        "summary": "Logs the user in.",
        "description": "Logs the user in",
        "operationId": "login",
        "requestBody": {
          "description": "User credentials (email and password)",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "test@test.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "test123456"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "string",
                      "description": "Name of the user"
                    },
                    "access": {
                      "type": "string",
                      "description": "Access token"
                    },
                    "refresh": {
                      "type": "string",
                      "description": "Refresh token"
                    },
                    "quote": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string",
                          "description": "Quote content"
                        },
                        "author": {
                          "type": "string",
                          "description": "Quote author"
                        }
                      }
                    }
                  }
                }
              }
            },
            "links": {
              "login": {
                "$ref": "#/components/links/login"
              },
              "refreshToken": {
                "$ref": "#/components/links/refreshToken"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/InvalidData"
          }
        }
      },
      "delete": {
        "tags": ["sessions"],
        "summary": "Logs out current logged in user session",
        "operationId": "logout",
        "responses": {
          "204": {
            "description": "User logged out successfully",
            "content": {}
          },
          "400": {
            "description": "Error logging out",
            "content": {}
          },
          "401": {
            "description": "Not authenticated",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/tokens": {
      "post": {
        "tags": ["tokens"],
        "summary": "Refresh access token",
        "operationId": "refreshToken",
        "requestBody": {
          "description": "Refresh token",
          "content": {},
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "links": {
              "refreshToken": {
                "$ref": "#/components/links/refreshToken"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/InvalidData"
          }
        }
      }
    },
    "/tokens/{token}": {
      "get": {
        "tags": ["tokens"],
        "summary": "Verify user email",
        "description": "Verify user email",
        "operationId": "verifyEmail",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Token to verify",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email verified",
            "content": {},
            "links": {
              "login": {
                "$ref": "#/components/links/login"
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "tags": ["tasks"],
        "summary": "Get all tasks for the user",
        "description": "Returns all user tasks",
        "operationId": "getTasks",
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string",
              "enum": ["pending", "in-progress", "completed"],
              "example": "completed"
            }
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 2
            },
            "description": "current page for the pagination, limit needs to be provided"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "example": 10
            },
            "description": "Number of items to return"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "example": "title:asc"
            },
            "description": "Key and order to sort items."
          },
          {
            "in": "query",
            "name": "admin",
            "schema": {
              "type": "boolean",
              "example": true
            },
            "description": "Admin only - Gets all tasks for all users if no other params"
          },
          {
            "in": "query",
            "name": "user",
            "schema": {
              "type": "string"
            },
            "description": "Admin only - Filters tasks by user, needs admin param to be true"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            },
            "links": {
              "getTaskById": {
                "$ref": "#/components/links/getTaskById"
              },
              "getAllTasks": {
                "$ref": "#/components/links/getAllTasks"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/InvalidData"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "tags": ["tasks"],
        "summary": "Create a new task",
        "operationId": "createTask",
        "requestBody": {
          "description": "Task object that needs to be added to the store",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "in-progress", "completed"]
                  },
                  "time": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            },
            "links": {
              "getTaskById": {
                "$ref": "#/components/links/getTaskById"
              },
              "getAllTasks": {
                "$ref": "#/components/links/getAllTasks"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/InvalidData"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": ["tasks"],
        "summary": "Find task by ID",
        "description": "Returns a single task",
        "operationId": "getTaskById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of task to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            },
            "links": {
              "getTaskById": {
                "$ref": "#/components/links/getTaskById"
              },
              "getAllTasks": {
                "$ref": "#/components/links/getAllTasks"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["tasks"],
        "summary": "Update task",
        "description": "Update a task. To update status to completed, time must be provided.",
        "operationId": "updateTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the task to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated task object",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "time": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "in-progress", "completed"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            },
            "links": {
              "getTaskById": {
                "$ref": "#/components/links/getTaskById"
              },
              "getAllTasks": {
                "$ref": "#/components/links/getAllTasks"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "422": {
            "$ref": "#/components/responses/InvalidData"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["tasks"],
        "summary": "Deletes a task",
        "operationId": "deleteTask",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the task to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Task deleted successfully",
            "links": {
              "getAllTasks": {
                "$ref": "#/components/links/getAllTasks"
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "responses": {
      "BadRequest": {
        "description": "Error getting the requested resource.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InvalidData": {
        "description": "Invalid data",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Not authenticated",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Access to resource forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "User": {
        "required": ["username", "email", "password"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": ["admin", "user"],
            "default": "user"
          }
        }
      },
      "Task": {
        "required": ["title", "description"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Automatically generated"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "user": {
            "type": "string",
            "description": "Id of current user, automatically added by authentication service"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "in-progress", "completed"],
            "default": "pending"
          },
          "time": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        }
      },
      "Error": {
        "type": "string",
        "example": "Error during request"
      }
    },
    "links": {
      "login": {
        "operationRef": "/sessions",
        "description": "Log user in"
      },
      "refreshToken": {
        "operationRef": "/tokens",
        "description": "Refresh token"
      },
      "getTaskById": {
        "operationRef": "/tasks/{id}",
        "description": "Get task by ID",
        "parameters": {
          "taskId": "$response.body#/id"
        }
      },
      "getAllTasks": {
        "operationRef": "/tasks",
        "description": "Get all tasks"
      },
      "currentUser": {
        "operationRef": "/users/current",
        "description": "Get current user"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
